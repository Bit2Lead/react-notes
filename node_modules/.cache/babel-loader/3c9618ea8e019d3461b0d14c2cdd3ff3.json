{"ast":null,"code":"var _jsxFileName = \"/home/bingo/computer/lara/react/notes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport uuid from 'react-uuid';\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Main from './Main';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [activeNote, setActiveNote] = useState(false);\n  useEffect(() => {\n    localStorage.setItem('notes', JSON.stringify(notes));\n  }, [notes]);\n\n  const onDeleteNote = idToDelete => {\n    setNotes(notes.filter(note => note.id !== idToDelete));\n  };\n\n  const getActiveNote = () => {\n    return notes.find(note => note.id === activeNote);\n  };\n\n  const onUpdateNote = updatedNote => {\n    const updatedNotesArray = notes.map(note => {\n      if (note.id === activeNote) {\n        return updatedNote;\n      }\n\n      return note;\n    });\n    setNotes(updatedNotesArray);\n  };\n\n  const onAddNote = () => {\n    const newNote = {\n      id: uuid(),\n      title: \"Untitled note\",\n      note: \"\",\n      lastModified: Date.now()\n    };\n    setNotes([newNote, ...notes]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      activeNote: activeNote,\n      setActiveNote: setActiveNote,\n      notes: notes,\n      onAddNote: onAddNote,\n      onDeleteNote: onDeleteNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      activeNote: getActiveNote(),\n      onUpdateNote: onUpdateNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"H44L1n32WAHtmFsC39muDoC2Xdo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/bingo/computer/lara/react/notes/src/App.js"],"names":["useState","useEffect","uuid","Sidebar","Main","App","notes","setNotes","activeNote","setActiveNote","localStorage","setItem","JSON","stringify","onDeleteNote","idToDelete","filter","note","id","getActiveNote","find","onUpdateNote","updatedNote","updatedNotesArray","map","onAddNote","newNote","title","lastModified","Date","now"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;AACAC,EAAAA,SAAS,CAAC,MAAK;AACbS,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeP,KAAf,CAA9B;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAKA,QAAMQ,YAAY,GAAIC,UAAD,IAAgB;AACnCR,IAAAA,QAAQ,CAACD,KAAK,CAACU,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYH,UAAnC,CAAD,CAAR;AACD,GAFD;;AAGA,QAAMI,aAAa,GAAG,MAAM;AAC1B,WAAOb,KAAK,CAACc,IAAN,CAAYH,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYV,UAAjC,CAAP;AACD,GAFD;;AAIA,QAAMa,YAAY,GAAIC,WAAD,IAAiB;AACpC,UAAMC,iBAAiB,GAAGjB,KAAK,CAACkB,GAAN,CAAWP,IAAD,IAAU;AAC5C,UAAGA,IAAI,CAACC,EAAL,KAAYV,UAAf,EACA;AACE,eAAOc,WAAP;AACD;;AACD,aAAOL,IAAP;AACD,KANyB,CAA1B;AAOAV,IAAAA,QAAQ,CAACgB,iBAAD,CAAR;AACD,GATD;;AAWA,QAAME,SAAS,GAAG,MAAM;AACtB,UAAMC,OAAO,GAAG;AACdR,MAAAA,EAAE,EAAEhB,IAAI,EADM;AAEdyB,MAAAA,KAAK,EAAE,eAFO;AAGdV,MAAAA,IAAI,EAAE,EAHQ;AAIdW,MAAAA,YAAY,EAAEC,IAAI,CAACC,GAAL;AAJA,KAAhB;AAMAvB,IAAAA,QAAQ,CAAC,CAACmB,OAAD,EAAU,GAAGpB,KAAb,CAAD,CAAR;AACD,GARD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,UAAU,EAAEE,UAArB;AAAiC,MAAA,aAAa,EAAEC,aAAhD;AAA+D,MAAA,KAAK,EAAEH,KAAtE;AAA6E,MAAA,SAAS,EAAEmB,SAAxF;AAAmG,MAAA,YAAY,EAAEX;AAAjH;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,UAAU,EAAEK,aAAa,EAA/B;AAAmC,MAAA,YAAY,EAAEE;AAAjD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA5CQhB,G;;KAAAA,G;AA8CT,eAAeA,GAAf","sourcesContent":["import {useState, useEffect} from 'react';\nimport uuid from 'react-uuid';\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Main from './Main';\n\nfunction App() {\n\n  const [notes, setNotes] = useState([]);\n  const [activeNote, setActiveNote] = useState(false);\n  useEffect(() =>{\n    localStorage.setItem('notes', JSON.stringify(notes));\n  }, [notes]);\n\n\n  const onDeleteNote = (idToDelete) => {\n    setNotes(notes.filter((note) => note.id !== idToDelete));\n  }\n  const getActiveNote = () => {\n    return notes.find((note) => note.id === activeNote);\n  };\n\n  const onUpdateNote = (updatedNote) => {\n    const updatedNotesArray = notes.map((note) => {\n      if(note.id === activeNote)\n      {\n        return updatedNote;\n      }\n      return note;\n    });\n    setNotes(updatedNotesArray);\n  };\n\n  const onAddNote = () => {\n    const newNote = {\n      id: uuid(),\n      title: \"Untitled note\",\n      note: \"\",\n      lastModified: Date.now(),\n    }\n    setNotes([newNote, ...notes]);\n  };\n\n\n  return (\n    <div className='App'>\n      <Sidebar activeNote={activeNote} setActiveNote={setActiveNote} notes={notes} onAddNote={onAddNote} onDeleteNote={onDeleteNote} />\n      <Main activeNote={getActiveNote()} onUpdateNote={onUpdateNote} />\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}